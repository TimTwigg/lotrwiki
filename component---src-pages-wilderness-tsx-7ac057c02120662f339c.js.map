{"version":3,"file":"component---src-pages-wilderness-tsx-7ac057c02120662f339c.js","mappings":"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","sources":["webpack://lotrwiki/./node_modules/gatsby-plugin-anchor-links/components/AnchorLink.js","webpack://lotrwiki/./node_modules/gatsby-plugin-anchor-links/index.js","webpack://lotrwiki/./src/pages/wilderness.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnchorLink = AnchorLink;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _gatsby = require(\"gatsby\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nAnchorLink.propTypes = {\n  to: _propTypes[\"default\"].string.isRequired,\n  title: _propTypes[\"default\"].string,\n  className: _propTypes[\"default\"].string,\n  stripHash: _propTypes[\"default\"].bool,\n  gatsbyLinkProps: _propTypes[\"default\"].object,\n  onAnchorLinkClick: _propTypes[\"default\"].func,\n  children: _propTypes[\"default\"].node\n};\n\nfunction AnchorLink(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$stripHash = _ref.stripHash,\n      stripHash = _ref$stripHash === void 0 ? false : _ref$stripHash,\n      _ref$gatsbyLinkProps = _ref.gatsbyLinkProps,\n      gatsbyLinkProps = _ref$gatsbyLinkProps === void 0 ? {} : _ref$gatsbyLinkProps,\n      onAnchorLinkClick = _ref.onAnchorLinkClick;\n  var onClickHandler = stripHash ? _utils.handleStrippedLinkClick : _utils.handleLinkClick;\n\n  var linkProps = _objectSpread(_objectSpread({}, gatsbyLinkProps), {}, {\n    /**\n     * Spread optional gatsbyLinkProps object in fist, so our specific props will override\n     */\n    to: stripHash ? (0, _utils.stripHashedLocation)(to) : to,\n    onClick: function onClick(e) {\n      return onClickHandler(to, e, onAnchorLinkClick);\n    }\n  });\n  /**\n   * Optional props\n   */\n\n\n  if (title) linkProps.title = title;\n  if (className) linkProps.className = className;\n  return /*#__PURE__*/_react[\"default\"].createElement(_gatsby.Link, linkProps, children ? children : title);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnchorLink\", {\n  enumerable: true,\n  get: function get() {\n    return _AnchorLink.AnchorLink;\n  }\n});\n\nvar _AnchorLink = require(\"./components/AnchorLink\");","import * as React from \"react\"\r\nimport type { HeadFC, PageProps } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport { AnchorLink } from \"gatsby-plugin-anchor-links\"\r\nimport \"./../styling/wilderness.css\"\r\n\r\nvar init = false;\r\n\r\ntype Region = {\r\n    name: string,\r\n    terrain: \"valley\" | \"mountains\" | \"foothills\" | \"forest\" | \"tundra\" | \"desert\"\r\n}\r\n\r\nconst REGIONS: Region[] = [\r\n    {\r\n        name: \"Rivendell\",\r\n        terrain: \"valley\"\r\n    },\r\n    {\r\n        name: \"Mirkwood\",\r\n        terrain: \"forest\"\r\n    },\r\n    {\r\n        name: \"Misty Mountains\",\r\n        terrain: \"mountains\"\r\n    },\r\n    {\r\n        name: \"Misty Mountain Foothills\",\r\n        terrain: \"foothills\"\r\n    },\r\n    {\r\n        name: \"Vales of Anduin\",\r\n        terrain: \"valley\"\r\n    }\r\n]\r\n\r\nconst SEASONS: string[] = [\r\n    \"Winter\",\r\n    \"Spring\",\r\n    \"Summer\",\r\n    \"Fall\"\r\n]\r\n\r\nfunction d4() {\r\n    return Math.ceil(Math.random() * 4);\r\n}\r\n\r\nfunction d20() {\r\n    return Math.ceil(Math.random() * 20);\r\n}\r\n\r\nfunction setUpRegions() {\r\n    let selector = document.getElementById(\"region\") as HTMLSelectElement;\r\n    for (let r of REGIONS) {\r\n        let child = document.createElement(\"option\");\r\n        child.value = r.name;\r\n        child.text = r.name;\r\n        selector.appendChild(child);\r\n    }\r\n    init = true;\r\n}\r\n\r\nfunction getValueFromSelect(id:string): string {\r\n    let selector = document.getElementById(id) as HTMLSelectElement;\r\n    return selector.options[selector.selectedIndex].value;\r\n}\r\n\r\nfunction setRandomWeather() {\r\n    let region = getValueFromSelect(\"region\");\r\n    let season = getValueFromSelect(\"season\");\r\n    if (region == \"Region\" || season == \"Season\") {\r\n        document.getElementById(\"generatedWeather\")!.innerText = \"No Region or Season Selected\";\r\n        return;\r\n    }\r\n    let temp = null;\r\n    let wind = null;\r\n    let precipitation = null;\r\n    // temp\r\n    let x = d20();\r\n    if (x < 15) temp = \"normal\";\r\n    else if (x < 18) temp = \"hot\";\r\n    else temp = \"cold\";\r\n    // wind\r\n    x = d20();\r\n    if (x < 15) wind = \"no wind\";\r\n    else if (x < 18) wind = \"light winds\";\r\n    else wind = \"strong winds\";\r\n    // precipitation\r\n    x = d20();\r\n    if (x < 15) precipitation = \"clear skies\";\r\n    else if (x < 18) precipitation = \"light rain\";\r\n    else precipitation = \"heavy rain\";\r\n\r\n    if (temp != \"normal\") {\r\n        var zone = REGIONS.find(r => r.name == region)?.terrain;\r\n        var mod = d4() * 10;\r\n        if (temp == \"hot\" && (zone == \"desert\" || mod == 40 ||\r\n        (mod == 30 && season == \"Summer\"))) {\r\n            temp = \"extremely hot\";\r\n        }\r\n        else if (temp == \"cold\" && \r\n        (zone == \"mountains\" || zone == \"foothills\" ||\r\n        zone == \"tundra\" || mod == 40 || (mod == 30 && season == \"Winter\"))) {\r\n            temp = \"extremely cold\";\r\n        }\r\n    }\r\n\r\n    var outString = \"The weather is \" + temp + \" with \" + wind + \" and \" + precipitation + \".\";\r\n    document.getElementById(\"generatedWeather\")!.innerText = outString;\r\n}\r\n\r\nconst WildernessPage: React.FC<PageProps> = () => {\r\n    return (\r\n        <Layout title = \"Wilderness\">\r\n            <div>\r\n                <h1>Wilderness Survival</h1>\r\n                <hr/>\r\n                <p>\r\n                    The DMG specifies random tables for generating random wilderness survival conditions such as\r\n                    weather, foraging, getting lost, etc. Here are those same tables automated to generate random conditions.\r\n                </p>\r\n                <div className = \"contentLinks\">\r\n                    <AnchorLink to = \"/wilderness#generators\">Generators</AnchorLink>\r\n                    <AnchorLink to = \"/wilderness#weather\">Weather</AnchorLink>\r\n                    <AnchorLink to = \"/wilderness#foraging\">Foraging</AnchorLink>\r\n                    {/* <AnchorLink to = \"/wilderness#\"></AnchorLink> */}\r\n                </div>\r\n                <hr/>\r\n\r\n                <h3 id = \"generators\">Random Generators</h3>\r\n                <h5>Weather</h5>\r\n                <div className = \"six columns offset-by-one column\">\r\n                    <select id = \"region\" defaultValue = {\"Region\"} onClick = {e => {if (!init) setUpRegions()}}>\r\n                        <option value = \"Region\" disabled>Region</option>\r\n                    </select> in <select id = \"season\" defaultValue = {\"Season\"}>\r\n                        <option value = \"Season\" disabled>Season</option>\r\n                        <option value = \"Winter\">Winter</option>\r\n                        <option value = \"Spring\">Spring</option>\r\n                        <option value = \"Summer\">Summer</option>\r\n                        <option value = \"Fall\">Fall</option>\r\n                    </select>\r\n                    <p id = \"generatedWeather\" className = \"output\"></p>\r\n                </div>\r\n                <button id = \"generate\" className = \"four columns\" onClick = {setRandomWeather}>Generate Weather</button>\r\n                <hr/>\r\n\r\n                <h3 id = \"weather\">Weather</h3>\r\n                <p>\r\n                    The random weather tables from the <a href = \"https://www.dndbeyond.com/sources/dmg/adventure-environments#Weather\" target = \"_blank\">DMG</a>:\r\n                </p>\r\n                <table className = \"nine columns offset-by-one column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>d20</th>\r\n                            <th>Temperature</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1-14</td>\r\n                            <td>Normal for the season</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>15-17</td>\r\n                            <td>1d4 x 10 degrees Fahrenheit colder than normal</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>18-20</td>\r\n                            <td>1d4 x 10 degrees Fahrenheit hotter than normal</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className = \"nine columns offset-by-one column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>d20</th>\r\n                            <th>Wind</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1-14</td>\r\n                            <td>None</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>15-17</td>\r\n                            <td>Light</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>18-20</td>\r\n                            <td>Strong</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className = \"nine columns offset-by-one column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>d20</th>\r\n                            <th>Precipitation</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1-14</td>\r\n                            <td>None</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>15-17</td>\r\n                            <td>Light rain or light snowfall</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>18-20</td>\r\n                            <td>Heavy rain or heavy snowfall</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <hr/>\r\n\r\n                <h3 id = \"foraging\">Foraging</h3>\r\n                <p>\r\n                    The <a href = \"https://www.dndbeyond.com/sources/dmg/adventure-environments#Foraging\" target = \"_blank\">DMG</a>\r\n                    describes foraging as follows: <br/>\r\n                    Characters can gather food and water as the party travels at a normal or slow pace. A foraging\r\n                    character makes a Wisdom (Survival) check whenever called for by the DM, with the DC determined\r\n                    by the abundance of food and water in the region.\r\n                </p>\r\n                <table className = \"nine columns offset-by-one column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DC</th>\r\n                            <th>Food and Water Availability</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>10</td>\r\n                            <td>Abundant food and water sources</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>15</td>\r\n                            <td>Limited food and water sources</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>20</td>\r\n                            <td>Very little, if any, food and water sources</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default WildernessPage;\r\n\r\nexport const Head: HeadFC = () => (\r\n    <title>Wilderness</title>\r\n);\r\n"],"names":["Object","defineProperty","exports","value","AnchorLink","_react","_interopRequireDefault","require","_gatsby","_propTypes","_utils","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_ref","to","title","children","className","_ref$stripHash","stripHash","_ref$gatsbyLinkProps","gatsbyLinkProps","onAnchorLinkClick","onClickHandler","handleStrippedLinkClick","handleLinkClick","linkProps","stripHashedLocation","onClick","e","createElement","Link","propTypes","string","isRequired","bool","func","node","get","_AnchorLink","init","REGIONS","name","terrain","d20","Math","ceil","random","getValueFromSelect","id","selector","document","getElementById","options","selectedIndex","setRandomWeather","region","season","innerText","temp","wind","precipitation","x","_REGIONS$find","zone","find","r","mod","outString","WildernessPage","React","Layout","defaultValue","child","text","appendChild","setUpRegions","disabled","href","Head"],"sourceRoot":""}