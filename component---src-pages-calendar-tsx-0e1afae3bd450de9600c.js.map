{"version":3,"file":"component---src-pages-calendar-tsx-0e1afae3bd450de9600c.js","mappings":"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","sources":["webpack://lotrwiki/./src/algorithms/utilities.tsx","webpack://lotrwiki/./src/components/variableSelect.tsx","webpack://lotrwiki/./src/algorithms/dateAlgorithms.tsx","webpack://lotrwiki/./src/pages/calendar.tsx"],"sourcesContent":["/**\r\n * d4 Dice\r\n * @returns random number from 1 to 4 chosen uniformly\r\n */\r\nfunction d4(): number {\r\n    return Math.ceil(Math.random() * 4);\r\n}\r\n\r\n/**\r\n * d20 Dice\r\n * @returns random number from 1 to 20 chosen uniformly\r\n */\r\nfunction d20(): number {\r\n    return Math.ceil(Math.random() * 20);\r\n}\r\n\r\n/**\r\n * Get Selected Value from a HTML Select Element\r\n * @param id string id of the DOM select element\r\n * @returns string value chosen in the select\r\n */\r\nfunction getValueFromSelect(id: string): string {\r\n    let selector = document.getElementById(id) as HTMLSelectElement;\r\n    return selector.options[selector.selectedIndex].value;\r\n}\r\n\r\n/**\r\n * Print Number Formatted\r\n * @param {number} x the integer number to format\r\n * @returns the number formatted with spaces\r\n */\r\nfunction pNumF(x: number): string {\r\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \" \");\r\n}\r\n\r\nexport {\r\n    d4,\r\n    d20,\r\n    getValueFromSelect,\r\n    pNumF\r\n}","import * as React from \"react\";\r\n\r\ntype VariableSelectProps = {\r\n    name: string,\r\n    options: string[],\r\n    className?: string,\r\n    onChange: (val: string) => void\r\n}\r\n\r\nconst VariableSelect = ({ name, options, className, onChange } : VariableSelectProps) => {\r\n    return (\r\n        <select defaultValue = {name} className = {className} onChange = {(v) => {onChange(options[v.target.selectedIndex-1]);}}>\r\n            <option value = {name} disabled>{name}</option>\r\n            {\r\n                options.map((v, i) => <option key = {i}>{v}</option>)\r\n            }\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default VariableSelect;","// date constants\r\n\r\nconst LOTR_MONTHS = [\"Yestarë\", \"Narwain\", \"Nínui\", \"Gwaeron\", \"Gwirith\", \"Lothron\", \"Nórui\", \"Loëndë\", \"Cerveth\", \"Urui\", \"Ivanneth\", \"Narbeleth\", \"Hithui\", \"Girithron\", \"Mettarë\"];\r\nconst LOTR_DAYS = [1, 30, 30, 30, 30, 30, 31, 1, 31, 30, 30, 30, 30, 30, 1];\r\n\r\nconst STANDARD_MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nconst STANDARD_DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nfunction sum(arr: number[]): number {\r\n    return arr.reduce((partial, a) => partial + a, 0);\r\n}\r\n\r\n// date conversion algorithms\r\n\r\nfunction toDayCount(day: number, month: number, year: number, calendar: \"lotr\" | \"standard\", num: number): number {\r\n    var days;\r\n    if (calendar == \"lotr\") {\r\n        days = LOTR_DAYS.slice();\r\n    }\r\n    else {\r\n        days = STANDARD_DAYS.slice();\r\n    }\r\n\r\n    if (year % 4 == 0) {\r\n        if (calendar == \"lotr\") {\r\n            days[7] = 2;\r\n        }\r\n        else {\r\n            days[1] = 29;\r\n        }\r\n    }\r\n\r\n    return sum(days.slice(0, month)) + day + num;\r\n}\r\n\r\nfunction toLOTRDate(dayCount: number): {day: number, month: number, year: number} {\r\n    var yearMod = 0;\r\n    if (dayCount == 0) {\r\n        dayCount = sum(LOTR_DAYS) - 1;\r\n        yearMod = -1;\r\n    }\r\n    else if (dayCount < 0) {\r\n        while (dayCount < 0) {\r\n            yearMod -= 1;\r\n            dayCount += sum(LOTR_DAYS);\r\n        }\r\n    }\r\n    else if (dayCount > sum(LOTR_DAYS)) {\r\n        let total = sum(LOTR_DAYS);\r\n        while (dayCount > total) {\r\n            dayCount -= total;\r\n            yearMod += 1;\r\n        }\r\n    }\r\n\r\n    let month = 0;\r\n    let day = 0;\r\n    while (dayCount > 0) {\r\n        day = dayCount;\r\n        dayCount -= LOTR_DAYS[month];\r\n        month += 1;\r\n    }\r\n    return {day: day, month: month-1, year: yearMod};\r\n}\r\n\r\nfunction toStandardDate(dayCount: number): {day: number, month: number, year: number} {\r\n    var yearMod = 0;\r\n    if (dayCount == 0) {\r\n        dayCount = sum(STANDARD_DAYS) - 1;\r\n        yearMod = -1;\r\n    }\r\n    else if (dayCount < 0) {\r\n        while (dayCount < 0) {\r\n            yearMod -= 1;\r\n            dayCount += sum(STANDARD_DAYS);\r\n        }\r\n    }\r\n    else if (dayCount > sum(STANDARD_DAYS)) {\r\n        let total = sum(STANDARD_DAYS);\r\n        while (dayCount > total) {\r\n            dayCount -= total;\r\n            yearMod += 1;\r\n        }\r\n    }\r\n\r\n    let month = 0;\r\n    let day = 0;\r\n    while (dayCount > 0) {\r\n        day = dayCount;\r\n        dayCount -= STANDARD_DAYS[month];\r\n        month += 1;\r\n    }\r\n    return {day: day, month: month-1, year: yearMod};\r\n}\r\n\r\n// week day constants\r\n\r\n// set from session 7\r\n// 10 Lothron 02 is an Eärenya/Thursday.\r\n// BASELINE is the first day of the Fourth Age and the first day of 1977, the year the Silmarillion was published\r\nconst BASELINE = {\r\n    weekday: \"Elenya\",\r\n    year: 1,\r\n    age: \"FA\",\r\n    standardYear: 1977\r\n}\r\n\r\nconst LOTR_WEEKDAYS = [\"Isilya\", \"Aldëa\", \"Menelya\", \"Eärenya\", \"Valanya\", \"Elenya\", \"Anarya\"]\r\n\r\n// week day algorithms\r\n\r\nfunction calculateWeekday(day: number, month: number, year: number): string {\r\n    let daycount = toDayCount(day, month, year, \"lotr\", 0) - 1; // -1 to convert from 'day number' to 'days since'\r\n    for (let i = 1; i < year; ++i) {\r\n        daycount += 365;\r\n        if ((year - i) % 4 == 0) daycount += 1;\r\n    }\r\n    let index_adjustment = LOTR_WEEKDAYS.indexOf(BASELINE.weekday);\r\n    return LOTR_WEEKDAYS[(daycount + index_adjustment) % 7];\r\n}\r\n\r\nexport {\r\n    LOTR_DAYS,\r\n    LOTR_MONTHS,\r\n    STANDARD_DAYS,\r\n    STANDARD_MONTHS,\r\n    BASELINE,\r\n    sum,\r\n    toDayCount,\r\n    toLOTRDate,\r\n    toStandardDate,\r\n    calculateWeekday\r\n}","import * as React from \"react\";\r\nimport type { HeadFC, PageProps } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport { AnchorLinkBar } from \"../components/linkBar\";\r\nimport VariableSelect from \"../components/variableSelect\";\r\nimport { LOTR_DAYS, LOTR_MONTHS, STANDARD_MONTHS, toDayCount, toLOTRDate, toStandardDate, calculateWeekday, BASELINE } from \"../algorithms/dateAlgorithms\";\r\nimport { pNumF } from \"./../algorithms/utilities\";\r\n\r\nconst CURRENT_YEAR_LOTR = 2;\r\nconst THIRD_AGE_END_YEAR = 3021;\r\n\r\nconst CalendarPage: React.FC<PageProps> = () => {\r\n    // LOTR date 1 state\r\n    var [lotrDay1, SetLotrDay1] = React.useState(\"Day\");\r\n    var [dayOptions1, SetDayOptions1] = React.useState([\"1\"] as string[]);\r\n    var [lotrMonth1, SetLotrMonth1] = React.useState(\"Month\");\r\n    var [monthOptions1, SetMonthOptions1] = React.useState(LOTR_MONTHS);\r\n    var [lotrYear1, SetLotrYear1] = React.useState(\"Year\");\r\n    var [lotrAge1, SetLotrAge1] = React.useState(\"FA\");\r\n\r\n    // LOTR date 2 state\r\n    var [lotrDay2, SetLotrDay2] = React.useState(\"Day\");\r\n    var [dayOptions2, SetDayOptions2] = React.useState([\"1\"] as string[]);\r\n    var [lotrMonth2, SetLotrMonth2] = React.useState(\"Month\");\r\n    var [monthOptions2, SetMonthOptions2] = React.useState(LOTR_MONTHS);\r\n    var [lotrYear2, SetLotrYear2] = React.useState(\"Year\");\r\n    var [lotrAge2, SetLotrAge2] = React.useState(\"FA\");\r\n    \r\n    // other states\r\n    var [operation, SetOperation] = React.useState(\"convert\");\r\n    var [dayInput, SetDayInput] = React.useState(0);\r\n    var [calculatorOut, SetCalculatorOut] = React.useState(\"\");\r\n\r\n    function changeOperation(operation: string) {\r\n        if (operation == \"convert\") {\r\n            document.getElementById(\"lotrDateElement\")!.classList.add(\"hidden\");\r\n            document.getElementById(\"standardDateElement\")!.classList.remove(\"hidden\");\r\n            document.getElementById(\"lotrDateAdditionElement\")!.classList.add(\"hidden\");\r\n            document.getElementById(\"lotrDateDifferenceElement\")!.classList.add(\"hidden\");\r\n        }\r\n        else if (operation == \"reverse\" || operation == \"weekday\") {\r\n            document.getElementById(\"lotrDateElement\")!.classList.remove(\"hidden\");\r\n            document.getElementById(\"standardDateElement\")!.classList.add(\"hidden\");\r\n            document.getElementById(\"lotrDateAdditionElement\")!.classList.add(\"hidden\");\r\n            document.getElementById(\"lotrDateDifferenceElement\")!.classList.add(\"hidden\");\r\n        }\r\n        else if (operation == \"add\") {\r\n            document.getElementById(\"lotrDateElement\")!.classList.remove(\"hidden\");\r\n            document.getElementById(\"standardDateElement\")!.classList.add(\"hidden\");\r\n            document.getElementById(\"lotrDateAdditionElement\")!.classList.remove(\"hidden\");\r\n            document.getElementById(\"lotrDateDifferenceElement\")!.classList.add(\"hidden\");\r\n        }\r\n        else if (operation == \"diff\") {\r\n            document.getElementById(\"lotrDateElement\")!.classList.remove(\"hidden\");\r\n            document.getElementById(\"standardDateElement\")!.classList.add(\"hidden\");\r\n            document.getElementById(\"lotrDateAdditionElement\")!.classList.add(\"hidden\");\r\n            document.getElementById(\"lotrDateDifferenceElement\")!.classList.remove(\"hidden\");\r\n        }\r\n    }\r\n\r\n    function changeLOTRDateOptions(dateCode: number, month: string, year: string) {\r\n        let months = LOTR_MONTHS.slice();\r\n        let days = LOTR_DAYS.slice();\r\n\r\n        if (parseInt(year) % 4 == 0) {\r\n            months[7] = \"Enderi\";\r\n            days[7] = 2;\r\n        }\r\n\r\n        let monthNum = months.indexOf(month);\r\n        if (monthNum == -1) monthNum = 7;\r\n\r\n        let dayOptions: string[] = [];\r\n        for (let i = 1; i <= days[monthNum]; ++i) {\r\n            dayOptions.push(i.toString());\r\n        }\r\n\r\n        if (dateCode == 1) {\r\n            SetDayOptions1(dayOptions);\r\n            SetMonthOptions1(months);\r\n        }\r\n        else if (dateCode == 2) {\r\n            SetDayOptions2(dayOptions);\r\n            SetMonthOptions2(months);\r\n        }\r\n    }\r\n    \r\n    function calculateDate() {\r\n        // convert from standard date to lotr date\r\n        if (operation == \"convert\") {\r\n            let standardDate = (document.getElementById(\"standardDate\") as HTMLInputElement).value;\r\n            if (standardDate == \"\" || standardDate == null) {\r\n                SetCalculatorOut(\"No Date Selected\");\r\n                return;\r\n            }\r\n\r\n            let age = \"FA\";\r\n            let date = new Date(standardDate);\r\n            let day = date.getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            let year = date.getUTCFullYear();\r\n            let daycount = toDayCount(day, month, year, \"standard\", 0);\r\n            if (year < BASELINE.standardYear) {\r\n                year += THIRD_AGE_END_YEAR;\r\n                age = \"TA\";\r\n            }\r\n            year = year - BASELINE.standardYear + 1;\r\n            let dateObj = toLOTRDate(daycount);\r\n            SetCalculatorOut(`${calculateWeekday(dateObj.day, dateObj.month, dateObj.year + CURRENT_YEAR_LOTR)}, ${String(dateObj.day).padStart(2, \"0\")}\r\n                ${LOTR_MONTHS[dateObj.month]} ${String(dateObj.year + year).padStart(2, \"0\")} (${age})`);\r\n        }\r\n    \r\n        // convert from lotr date to standard date\r\n        else if (operation == \"reverse\") {\r\n            let day = parseInt(lotrDay1);\r\n            let month = lotrMonth1;\r\n            let year = parseInt(lotrYear1);\r\n            if (isNaN(day) || day == 0 || month == \"Month\" || isNaN(year)) {\r\n                SetCalculatorOut(\"No Date Selected\");\r\n                return;\r\n            }\r\n    \r\n            let monthNum = LOTR_MONTHS.indexOf(month);\r\n            if (year % 4 == 0 && month == \"Enderi\") {\r\n                monthNum = 7;\r\n            }\r\n            let daycount = toDayCount(day, monthNum, year, \"lotr\", 0);\r\n            let dateObj = toStandardDate(daycount);\r\n            if (lotrAge1 == \"FA\") year = year + BASELINE.standardYear - 1;\r\n            else if (lotrAge1 == \"TA\") year = year - THIRD_AGE_END_YEAR + BASELINE.standardYear - 1;\r\n            SetCalculatorOut(`${String(dateObj.day).padStart(2, \"0\")} ${STANDARD_MONTHS[dateObj.month]}\r\n                ${String(Math.abs(dateObj.year + year)).padStart(2, \"0\")}${year < 0 ? \" (BC)\" : \"\"}`);\r\n        }\r\n    \r\n        // get week day from lotr date\r\n        else if (operation == \"weekday\") {\r\n            let day = parseInt(lotrDay1);\r\n            let month = lotrMonth1;\r\n            let year = parseInt(lotrYear1);\r\n            if (isNaN(day) || day == 0 || month == \"Month\" || isNaN(year)) {\r\n                SetCalculatorOut(\"No Date Selected\");\r\n                return;\r\n            }\r\n    \r\n            let monthNum = LOTR_MONTHS.indexOf(month);\r\n            if (year % 4 == 0 && month == \"Enderi\") {\r\n                monthNum = 7;\r\n            }\r\n            let weekday = calculateWeekday(day, monthNum, year);\r\n            SetCalculatorOut(`${day} ${month} ${year} was/will be a${weekday[0] == \"M\" || weekday[0] == \"V\" ? \"\" : \"n\"} ${weekday}`);\r\n        }\r\n    \r\n        // add days to lotr date\r\n        else if (operation == \"add\") {\r\n            let day = parseInt(lotrDay1);\r\n            let month = lotrMonth1;\r\n            let year = parseInt(lotrYear1);\r\n            let age = lotrAge1;\r\n            if (isNaN(day) || day == 0 || month == \"Month\" || isNaN(year)) {\r\n                SetCalculatorOut(\"No Date Selected\");\r\n                return;\r\n            }\r\n    \r\n            let monthNum = LOTR_MONTHS.indexOf(month);\r\n            if (year % 4 == 0 && month == \"Enderi\") {\r\n                monthNum = 7;\r\n            }\r\n            let daycount = toDayCount(day, monthNum, year, \"lotr\", dayInput);\r\n            let dateObj = toLOTRDate(daycount);\r\n            if (age == \"TA\" && dateObj.year + year > THIRD_AGE_END_YEAR) {\r\n                year = dateObj.year + year - THIRD_AGE_END_YEAR;\r\n                dateObj.year = 0;\r\n                age = \"FA\";\r\n            }\r\n            SetCalculatorOut(`${calculateWeekday(dateObj.day, dateObj.month, dateObj.year + year)}, ${String(dateObj[\"day\"]).padStart(2, \"0\")}\r\n                ${LOTR_MONTHS[dateObj[\"month\"]]} ${String(dateObj[\"year\"] + year).padStart(2, \"0\")} (${age})`);\r\n        }\r\n    \r\n        // calculate difference between 2 KR lotr dates\r\n        else if (operation == \"diff\") {\r\n            let day1 = parseInt(lotrDay1);\r\n            let year1 = parseInt(lotrYear1);\r\n            let day2 = parseInt(lotrDay2);\r\n            let year2 = parseInt(lotrYear2);\r\n            if (isNaN(day1) || isNaN(day2) || day1 == 0 || day2 == 0 || lotrMonth1 == \"Month\" || lotrMonth2 == \"Month\" || isNaN(year1) || isNaN(year2)) {\r\n                SetCalculatorOut(\"Dates Note Properly Selected\");\r\n                return;\r\n            }\r\n    \r\n            let monthNum1 = LOTR_MONTHS.indexOf(lotrMonth1);\r\n            let monthNum2 = LOTR_MONTHS.indexOf(lotrMonth2);\r\n            if (year1 % 4 == 0 && lotrMonth1 == \"Enderi\") {\r\n                monthNum1 = 7;\r\n            }\r\n            if (year2 % 4 == 0 && lotrMonth2 == \"Enderi\") {\r\n                monthNum2 = 7;\r\n            }\r\n    \r\n            let daycount1 = toDayCount(day1, monthNum1, year1, \"lotr\", 0);\r\n            let daycount2 = toDayCount(day2, monthNum2, year2, \"lotr\", 0);\r\n            let days = daycount2 - daycount1;\r\n            if (year1 != year2 || lotrAge1 != lotrAge2) {\r\n                if (lotrAge1 == \"TA\") year2 += THIRD_AGE_END_YEAR;\r\n                else if (lotrAge2 == \"TA\") year1 += THIRD_AGE_END_YEAR;\r\n                var daysMod = 0;\r\n                for (var i = 0; i < Math.abs(year2 - year1); ++i) {\r\n                    if (year1 < year2) {\r\n                        daysMod += 365;\r\n                        if ((year1 + i) % 4 == 0) daysMod += 1;\r\n                    }\r\n                    else {\r\n                        daysMod -= 365;\r\n                        if ((year2 + i) % 4 == 0) daysMod -= 1;\r\n                    }\r\n                }\r\n                days += daysMod;\r\n            }\r\n            SetCalculatorOut(`${pNumF(Math.abs(days))} days or ${pNumF(Math.round(Math.abs(days) / 3.65256) / 100)} years`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout title = \"        \">\r\n            <div>\r\n                <h1>Calendars and the Reckoning of Time</h1>\r\n                <hr/>\r\n                <AnchorLinkBar hideWhenSmall = {true} pageTitle = \"Calendar\" links = {[\r\n                    { name: \"Overview\", url: \"/calendar#overview\" },\r\n                    { name: \"Calculator\", url: \"/calendar#calculator\" },\r\n                    { name: \"Months, Days, Seasons\", url: \"/calendar#monthsTable\" },\r\n                    { name: \"Campaign Time\", url: \"/calendar#campaign\" }\r\n                ]}/>\r\n                <hr/>\r\n\r\n                <h3 id = \"overview\">Overview</h3>\r\n                <p>\r\n                    Middle Earth has many calendars, from the elven calendar to the King's Reckoning to the Steward's Reckoning to\r\n                    the New Reckoning to the Shire Reckoning. These can quickly become confusing, and who really needs to keep detailed\r\n                    track of time for a D&D campaign anyway? <br/>\r\n                    Answer: the DM. <br/>\r\n                    And sometimes some players like to know these things. <br/>\r\n                    And some quests rely on specific timing. <br/>\r\n                    And ... <br/>\r\n                    You get the point.\r\n                </p>\r\n                <p>\r\n                    For the LOTR D&D Campiagn, we use a slightly adapted form of the King's Reckoning. <br/>\r\n                    The standard King's Reckoning is very similar to our own Gregorian calendar. There are twelve months, ten with 30 days\r\n                    and 2 with 31. There are 2 days between one year and the next and 1 mid-year day. The calendar year begins at\r\n                    mid-winter. <br/>\r\n                    The months of the year are: <br/>\r\n                    Narwain, Nínui, Gwaeron, Gwirith, Lothron, Nórui, Cerveth, Urui, Ivanneth, Narbeleth, Hithui, and Girithron. <br/>\r\n                    The year-start day is Yestarë, the year-end day is Mettarë, and the mid-year day is Loëndë. <br/>\r\n                    Nórui and Cerveth have 31 days, the rest have 30. On a leap year, the extra day goes in the middle and there are 2 mid-year\r\n                    days, called the Enderi.\r\n                </p>\r\n                <h5>On Converting Between LOTR and Gregorian Dates and the Baseline</h5>\r\n                <p>\r\n                    In order to convert between the King's Reckoning and Gregorian calendars, a baseline must be chosen: a day and year in each calendar that are said\r\n                    to line up which we can use as a reference to convert. For example, consider converting 1 January 2023 to King's Reckoning. Clearly it is Yestarë,\r\n                    but in which year? <br/>\r\n                    I have chosen to align the years 1977 (Gregorian) and 1 (Fourth Age). The significance of these dates is thus: 1977 is the publication date of the\r\n                    Silmarillion (Tolkien's lore) while the Fourth Age is the proper start of my adapted lore. This means that years prior to 1977 are the Third Age,\r\n                    and our current year of 2023 is the year 47 in the Fourth Age.\r\n                </p>\r\n                <hr/>\r\n\r\n                <h3 id = \"calculator\">Calculator</h3>\r\n                <p>\r\n                    Use this calendar calculator to convert between regular dates and the King's Reckoning (KR). Date addition is also supported. <br/>\r\n                    If you have a calendar calculation you would like to perform that is not currently supported, contact the developer. <br/>\r\n                    NOTE: King's Reckoning dates are by default in the Fourth Age. Operations involving other ages are currently not supported.\r\n                </p>\r\n                <form className = \"container\">\r\n                    <label htmlFor = \"optionPicker\" className = \"column three columns\">Operation</label>\r\n                    <select id = \"optionPicker\" className = \"eight columns\" onChange = {(x) => {changeOperation(x.target.value), SetOperation(x.target.value)}}>\r\n                        <option value = \"convert\">Convert from Standard Date</option>\r\n                        <option value = \"reverse\">Convert to Standard Date</option>\r\n                        <option value = \"weekday\">Get Day of the Week for A KR Date</option>\r\n                        <option value = \"add\">Add days to a KR date</option>\r\n                        <option value = \"diff\">Find the difference between two KR dates</option>\r\n                    </select>\r\n                    <div className = \"spacer\"/>\r\n\r\n                    <div id = \"standardDateElement\">\r\n                        <label htmlFor = \"standardDate\" className = \"column three columns\">Standard Date</label>\r\n                        <input id = \"standardDate\" title = \"Standard Gregorian Date\" type = \"date\" className = \"four columns\"/>\r\n                    </div>\r\n\r\n                    <div id = \"lotrDateElement\" className = \"hidden\">\r\n                        <label className = \"column three columns\">LOTR Date</label>\r\n                        <VariableSelect name = \"Day\" options = {dayOptions1} onChange = {(v) => {SetLotrDay1(v)}} className = \"two columns\"/>\r\n                        <VariableSelect name = \"Month\" options = {monthOptions1} onChange = {(v) => {SetLotrMonth1(v), changeLOTRDateOptions(1, v, lotrYear1)}} className = \"three columns\"/>\r\n                        <input type = \"number\" className = \"two columns\" placeholder = \"Year\"\r\n                            onKeyDown = {(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\r\n                            onChange = {(v) => {SetLotrYear1(v.target.value), changeLOTRDateOptions(1, lotrMonth1, v.target.value)}}/>\r\n                        <select id = \"lotrAge1\" title = \"King's Reckoning Age\" className = \"two columns\" defaultValue = {\"FA\"} onChange = {(v) => SetLotrAge1(v.target.value)}>\r\n                            <option value = \"FA\">FA</option>\r\n                            <option value = \"TA\">TA</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className = \"spacer\"/>\r\n                    <div id = \"lotrDateAdditionElement\" className = \"hidden\">\r\n                        <label htmlFor = \"dayInput\" className = \"column three columns\">Days</label>\r\n                        <input type = \"number\" id = \"dayInput\" className = \"four columns\" placeholder = \"Days\" onChange = {(v) => SetDayInput(parseInt(v.target.value) || 0)}/>\r\n                        <div className = \"spacer\"/>\r\n                    </div>\r\n\r\n                    <div id = \"lotrDateDifferenceElement\" className = \"hidden\">\r\n                        <label className = \"column three columns\">LOTR Date</label>\r\n                        <VariableSelect name = \"Day\" options = {dayOptions2} onChange = {(v) => SetLotrDay2(v)} className = \"two columns\"/>\r\n                        <VariableSelect name = \"Month\" options = {monthOptions2} onChange = {(v) => {SetLotrMonth2(v), changeLOTRDateOptions(2, v, lotrYear2)}} className = \"three columns\"/>\r\n                        <input type = \"number\" className = \"two columns\" placeholder = \"Year\"\r\n                            onKeyDown = {(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\r\n                            onChange = {(v) => {SetLotrYear2(v.target.value), changeLOTRDateOptions(2, lotrMonth2, v.target.value)}}/>\r\n                        <select id = \"lotrAge2\" title = \"King's Reckoning Age\" className = \"two columns\" defaultValue = {\"FA\"} onChange = {(v) => SetLotrAge2(v.target.value)}>\r\n                            <option value = \"FA\">FA</option>\r\n                            <option value = \"TA\">TA</option>\r\n                        </select>\r\n                        <div className = \"spacer\"/>\r\n                    </div>\r\n\r\n                    <div className = \"break\"/>\r\n                    <p className = \"output nine columns\" id = \"calculatorOut\">{calculatorOut}</p>\r\n                    <input type = \"button\" onClick = {() => calculateDate()} value = \"Calculate\" className = \"three columns\"></input>\r\n                </form>\r\n                <hr/>\r\n\r\n                <h3 id = \"monthsTable\">Months, Days, and Seasons</h3>\r\n                <table className = \"one-half column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Number</th>\r\n                            <th>Month</th>\r\n                            <th>Day Count</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>NA</td>\r\n                            <td>Yestarë</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>1</td>\r\n                            <td>Narwain</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>2</td>\r\n                            <td>Nínui</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>3</td>\r\n                            <td>Gwaeron</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>4</td>\r\n                            <td>Gwirith</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>5</td>\r\n                            <td>Lothron</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>6</td>\r\n                            <td>Nórui</td>\r\n                            <td>31</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>NA</td>\r\n                            <td>Loëndë</td>\r\n                            <td>1 (2)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>7</td>\r\n                            <td>Cerveth</td>\r\n                            <td>31</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>8</td>\r\n                            <td>Urui</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>9</td>\r\n                            <td>Ivanneth</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>10</td>\r\n                            <td>Narbeleth</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>11</td>\r\n                            <td>Hithui</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>12</td>\r\n                            <td>Girithron</td>\r\n                            <td>30</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>NA</td>\r\n                            <td>Mettarë</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className = \"one-half column\">\r\n                    <p>\r\n                        In the North-West of Middle Earth (Including Eriador, Rhovanion, Rohan, Gondor, and their surrounding areas), winter\r\n                        is generally regarded as lasting from Girithron to Nínui, Spring from Gwaeron to Lothron, Summer from Nórui to Urui,\r\n                        and Fall from Ivanneth to Hithui. <br/>\r\n                        <br/>\r\n                        The days of the week are Isilya, Aldëa, Menelya, Eärenya, Valanya, Elenya, and Anarya.\r\n                    </p>\r\n                    <table className = \"equi center rpad\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Day</th>\r\n                                <th>Equivalent</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Isilya</td>\r\n                                <td>Monday</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Aldëa</td>\r\n                                <td>Tuesday</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Menelya</td>\r\n                                <td>Wednesday</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Eärenya</td>\r\n                                <td>Thursday</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Valanya</td>\r\n                                <td>Friday</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Elenya</td>\r\n                                <td>Saturday</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Anarya</td>\r\n                                <td>Sunday</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <hr/>\r\n\r\n                <h3 id = \"campaign\">Campaign Time</h3>\r\n                <p>\r\n                    As mentioned above, we will use the King's Reckoning for the LOTR D&D campaign. The campaign starts in early to mid Spring\r\n                    (late Gwaeron), and from there depends on the players. Many companies prefer to spend winters somewhere warm...\r\n                </p>\r\n                <div className = \"double spacer\"/>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CalendarPage;\r\n\r\nexport const Head: HeadFC = () => <title>Calendar</title>;"],"names":["d4","Math","ceil","random","d20","getValueFromSelect","id","selector","document","getElementById","options","selectedIndex","value","pNumF","x","toString","replace","_ref","name","className","onChange","React","defaultValue","v","target","disabled","map","i","key","LOTR_MONTHS","LOTR_DAYS","STANDARD_MONTHS","STANDARD_DAYS","sum","arr","reduce","partial","a","toDayCount","day","month","year","calendar","num","days","slice","toLOTRDate","dayCount","yearMod","total","BASELINE","LOTR_WEEKDAYS","calculateWeekday","daycount","index_adjustment","indexOf","THIRD_AGE_END_YEAR","CalendarPage","lotrDay1","SetLotrDay1","dayOptions1","SetDayOptions1","lotrMonth1","SetLotrMonth1","monthOptions1","SetMonthOptions1","lotrYear1","SetLotrYear1","lotrAge1","SetLotrAge1","lotrDay2","SetLotrDay2","dayOptions2","SetDayOptions2","lotrMonth2","SetLotrMonth2","monthOptions2","SetMonthOptions2","lotrYear2","SetLotrYear2","lotrAge2","SetLotrAge2","operation","SetOperation","dayInput","SetDayInput","calculatorOut","SetCalculatorOut","changeLOTRDateOptions","dateCode","months","parseInt","monthNum","dayOptions","push","calculateDate","standardDate","age","date","Date","getUTCDate","getUTCMonth","getUTCFullYear","dateObj","String","padStart","isNaN","toStandardDate","abs","weekday","day1","year1","day2","year2","monthNum1","monthNum2","daycount1","daysMod","round","Layout","title","AnchorLinkBar","hideWhenSmall","pageTitle","links","url","htmlFor","classList","add","remove","changeOperation","type","VariableSelect","placeholder","onKeyDown","evt","includes","preventDefault","onClick","Head"],"sourceRoot":""}