{"version":3,"file":"component---src-pages-wilderness-tsx-e6a3cef9e51f6f9ae9d4.js","mappings":"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","sources":["webpack://lotrwiki/./src/pages/wilderness.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport type { HeadFC, PageProps } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport \"./../styling/wilderness.scss\"\r\nimport { AnchorLinkBar } from \"../components/linkBar\"\r\n\r\nvar init = false;\r\n\r\ntype Region = {\r\n    name: string,\r\n    terrain: \"valley\" | \"mountains\" | \"foothills\" | \"forest\" | \"tundra\" | \"desert\"\r\n}\r\n\r\nconst REGIONS: Region[] = [\r\n    {\r\n        name: \"Rivendell\",\r\n        terrain: \"valley\"\r\n    },\r\n    {\r\n        name: \"Mirkwood\",\r\n        terrain: \"forest\"\r\n    },\r\n    {\r\n        name: \"Misty Mountains\",\r\n        terrain: \"mountains\"\r\n    },\r\n    {\r\n        name: \"Misty Mountain Foothills\",\r\n        terrain: \"foothills\"\r\n    },\r\n    {\r\n        name: \"Vales of Anduin\",\r\n        terrain: \"valley\"\r\n    }\r\n]\r\n\r\nconst SEASONS: string[] = [\r\n    \"Winter\",\r\n    \"Spring\",\r\n    \"Summer\",\r\n    \"Fall\"\r\n]\r\n\r\nfunction d4() {\r\n    return Math.ceil(Math.random() * 4);\r\n}\r\n\r\nfunction d20() {\r\n    return Math.ceil(Math.random() * 20);\r\n}\r\n\r\nfunction setUpRegions() {\r\n    let selector = document.getElementById(\"region\") as HTMLSelectElement;\r\n    for (let r of REGIONS) {\r\n        let child = document.createElement(\"option\");\r\n        child.value = r.name;\r\n        child.text = r.name;\r\n        selector.appendChild(child);\r\n    }\r\n    init = true;\r\n}\r\n\r\nfunction getValueFromSelect(id:string): string {\r\n    let selector = document.getElementById(id) as HTMLSelectElement;\r\n    return selector.options[selector.selectedIndex].value;\r\n}\r\n\r\nfunction setRandomWeather() {\r\n    let region = getValueFromSelect(\"region\");\r\n    let season = getValueFromSelect(\"season\");\r\n    if (region == \"Region\" || season == \"Season\") {\r\n        document.getElementById(\"generatedWeather\")!.innerText = \"No Region or Season Selected\";\r\n        return;\r\n    }\r\n    let temp = null;\r\n    let wind = null;\r\n    let precipitation = null;\r\n    // temp\r\n    let x = d20();\r\n    if (x < 15) temp = \"normal\";\r\n    else if (x < 18) temp = \"cold\";\r\n    else temp = \"hot\";\r\n    // wind\r\n    x = d20();\r\n    if (x < 13) wind = \"no wind\";\r\n    else if (x < 18) wind = \"light winds\";\r\n    else wind = \"strong winds\";\r\n    // precipitation\r\n    x = d20();\r\n    if (x < 13) precipitation = \"clear skies\";\r\n    else if (x < 18) precipitation = \"light rain\";\r\n    else precipitation = \"heavy rain\";\r\n\r\n    var zone = REGIONS.find(r => r.name == region)?.terrain;\r\n    if (season == \"Winter\" && (zone == \"mountains\" || zone == \"foothills\" || zone == \"tundra\")) {\r\n        if (temp == \"normal\") temp = \"cold\";\r\n        else if (temp == \"hot\") temp = \"normal\";\r\n        precipitation = precipitation.replace(\"rain\", \"snow\");\r\n    }\r\n    if (temp != \"normal\") {\r\n        var mod = d4() * 10;\r\n        if (temp == \"hot\" && (zone == \"desert\" || mod == 40 ||\r\n        (mod == 30 && season == \"Summer\"))) {\r\n            temp = \"extremely hot\";\r\n        }\r\n        else if (temp == \"cold\" && \r\n        (zone == \"mountains\" || zone == \"foothills\" ||\r\n        zone == \"tundra\" || mod == 40 || (mod == 30 && season == \"Winter\"))) {\r\n            temp = \"extremely cold\";\r\n            if (precipitation != \"clear skies\") precipitation = precipitation.replace(\"rain\", \"snow\");\r\n        }\r\n    }\r\n\r\n    var outString = \"The weather is \" + temp + \" with \" + wind + \" and \" + precipitation + \".\";\r\n    document.getElementById(\"generatedWeather\")!.innerText = outString;\r\n}\r\n\r\nconst WildernessPage: React.FC<PageProps> = () => {\r\n    return (\r\n        <Layout title = \"Wilderness\">\r\n            <div>\r\n                <h1>Wilderness Survival</h1>\r\n                <hr/>\r\n                <p>\r\n                    The DMG specifies random tables for generating random wilderness survival conditions such as\r\n                    weather, foraging, getting lost, etc. Here are those same tables automated to generate random conditions.\r\n                </p>\r\n                <AnchorLinkBar hideWhenSmall = {true} pageTitle = \"Wilderness\" links = {[\r\n                    { name: \"Generators\", url: \"/wilderness#generators\" },\r\n                    { name: \"Weather\", url: \"/wilderness#weather\" },\r\n                    { name: \"Foraging\", url: \"/wilderness#foraging\" }\r\n                ]}/>\r\n                <hr/>\r\n\r\n                <h3 id = \"generators\">Random Generators</h3>\r\n                <h5>Weather</h5>\r\n                <div className = \"six columns offset-by-one column\">\r\n                    <select id = \"region\" defaultValue = {\"Region\"} onClick = {e => {if (!init) setUpRegions()}}>\r\n                        <option value = \"Region\" disabled>Region</option>\r\n                    </select> in <select id = \"season\" defaultValue = {\"Season\"}>\r\n                        <option value = \"Season\" disabled>Season</option>\r\n                        <option value = \"Winter\">Winter</option>\r\n                        <option value = \"Spring\">Spring</option>\r\n                        <option value = \"Summer\">Summer</option>\r\n                        <option value = \"Fall\">Fall</option>\r\n                    </select>\r\n                </div>\r\n                <button id = \"generate\" className = \"four columns\" onClick = {setRandomWeather}>Generate Weather</button>\r\n                <p id = \"generatedWeather\" className = \"output eleven columns offset-by-one column\"></p>\r\n                <hr/>\r\n\r\n                <h3 id = \"weather\">Weather</h3>\r\n                <p>\r\n                    The random weather tables from the <a href = \"https://www.dndbeyond.com/sources/dmg/adventure-environments#Weather\" target = \"_blank\">DMG</a>:\r\n                </p>\r\n                <table className = \"nine columns offset-by-one column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>d20</th>\r\n                            <th>Temperature</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1-14</td>\r\n                            <td>Normal for the season</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>15-17</td>\r\n                            <td>1d4 x 10 degrees Fahrenheit colder than normal</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>18-20</td>\r\n                            <td>1d4 x 10 degrees Fahrenheit hotter than normal</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className = \"nine columns offset-by-one column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>d20</th>\r\n                            <th>Wind</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1-12</td>\r\n                            <td>None</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>13-17</td>\r\n                            <td>Light</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>18-20</td>\r\n                            <td>Strong</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className = \"nine columns offset-by-one column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>d20</th>\r\n                            <th>Precipitation</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1-12</td>\r\n                            <td>None</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>13-17</td>\r\n                            <td>Light rain or light snowfall</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>18-20</td>\r\n                            <td>Heavy rain or heavy snowfall</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <hr/>\r\n\r\n                <h3 id = \"foraging\">Foraging</h3>\r\n                <p>\r\n                    The <a href = \"https://www.dndbeyond.com/sources/dmg/adventure-environments#Foraging\" target = \"_blank\">DMG</a>\r\n                    describes foraging as follows: <br/>\r\n                    Characters can gather food and water as the party travels at a normal or slow pace. A foraging\r\n                    character makes a Wisdom (Survival) check whenever called for by the DM, with the DC determined\r\n                    by the abundance of food and water in the region.\r\n                </p>\r\n                <table className = \"nine columns offset-by-one column\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DC</th>\r\n                            <th>Food and Water Availability</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>10</td>\r\n                            <td>Abundant food and water sources</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>15</td>\r\n                            <td>Limited food and water sources</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>20</td>\r\n                            <td>Very little, if any, food and water sources</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default WildernessPage;\r\n\r\nexport const Head: HeadFC = () => (\r\n    <title>Wilderness</title>\r\n);\r\n"],"names":["init","REGIONS","name","terrain","d20","Math","ceil","random","getValueFromSelect","id","selector","document","getElementById","options","selectedIndex","value","setRandomWeather","_REGIONS$find","region","season","innerText","temp","wind","precipitation","x","zone","find","r","replace","mod","outString","WildernessPage","React","Layout","title","AnchorLinkBar","hideWhenSmall","pageTitle","links","url","className","defaultValue","onClick","e","child","createElement","text","appendChild","setUpRegions","disabled","href","target","Head"],"sourceRoot":""}